code_snippet,type,score
"	protected Message<?> toMessagingMessage(javax.jms.Message jmsMessage) {
		try {
			return (Message<?>) getMessagingMessageConverter().fromMessage(jmsMessage);
		}
		catch (JMSException ex) {
			throw new MessageConversionException(""Could not convert JMS message"", ex);
		}
	}",method,
"		catch (JMSException ex) {
			throw new MessageConversionException(""Could not convert JMS message"", ex);
		}",method,
"	@Nullable
	private Object invokeHandler(javax.jms.Message jmsMessage, @Nullable Session session, Message<?> message) {
		InvocableHandlerMethod handlerMethod = getHandlerMethod();
		try {
			return handlerMethod.invoke(message, jmsMessage, session);
		}
		catch (MessagingException ex) {
			throw new ListenerExecutionFailedException(
					createMessagingErrorMessage(""Listener method could not be invoked with incoming message""), ex);
		}
		catch (Exception ex) {
			throw new ListenerExecutionFailedException(""Listener method '"" +
					handlerMethod.getMethod().toGenericString() + ""' threw exception"", ex);
		}
	}",method,
"		catch (MessagingException ex) {
			throw new ListenerExecutionFailedException(
					createMessagingErrorMessage(""Listener method could not be invoked with incoming message""), ex);
		}",method,
"		catch (Exception ex) {
			throw new ListenerExecutionFailedException(""Listener method '"" +
					handlerMethod.getMethod().toGenericString() + ""' threw exception"", ex);
		}",method,
"	private String createMessagingErrorMessage(String description) {
		InvocableHandlerMethod handlerMethod = getHandlerMethod();
		StringBuilder sb = new StringBuilder(description).append(""\n"")
				.append(""Endpoint handler details:\n"")
				.append(""Method ["").append(handlerMethod.getMethod()).append(""]\n"")
				.append(""Bean ["").append(handlerMethod.getBean()).append(""]\n"");
		return sb.toString();
	}",method,
